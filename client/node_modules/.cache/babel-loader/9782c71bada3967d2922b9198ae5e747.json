{"ast":null,"code":"var _jsxFileName = \"D:\\\\LXW\\\\truffle_proj\\\\qodpro\\\\dataTruffleSys\\\\client\\\\src\\\\views\\\\UploadManage.js\";\nimport Button from 'antd/lib/button';\n\nconst React = require('react');\n\nconst ipfsClient = require('ipfs-http-client');\n\nconst ipfs = ipfsClient('/ip4/127.0.0.1/tcp/5001');\nconst stringToUse = 'hello world from webpacked IPFS';\n\nclass UploadManage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.uploadIpfs = async () => {\n      const source = ipfs.add(stringToUse);\n\n      for await (const file of source) {\n        console.log(\"TCL: App -> forawait -> file\", file);\n        const hash = file.path;\n        this.setState({\n          isSuccess: \"成功\"\n        });\n        console.log(\"file_hash: \", hash); // const source = ipfs.cat(hash)\n        // const data = []\n        // for await (const chunk of source) {\n        //   data.push(chunk)\n        // }\n        // this.setState({ added_file_contents: Buffer.concat(data).toString() })\n        // console.log(\"file_contents: \",Buffer.concat(data).toString())\n      }\n    };\n\n    this.state = {\n      isSuccess: null // added_file_hash: null,\n      // id: null,\n      // version: null,\n      // protocol_version: null,\n      // added_file_contents: null\n\n    };\n  }\n\n  async componentDidMount() {// const id = await ipfs.id()\n    // this.setState({\n    //   id: id.id,\n    //   version: id.agentVersion,\n    //   protocol_version: id.protocolVersion\n    // })\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      style: {\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      onClick: this.uploadIpfs,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"\\u4E0A\\u4F20\\u81F3IPFS\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"\\u4E0A\\u4F20\\u72B6\\u6001\\uFF1A \", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, this.state.isSuccess)));\n  }\n\n}\n\nexport default UploadManage; // import React, { Component } from \"react\";\n// class Product extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = { };\n//   }\n//   render() {\n//     return (\n//         <div>\n//           Product\n//         </div>\n//     );\n//   }\n// }\n// export default Product;","map":{"version":3,"sources":["D:\\LXW\\truffle_proj\\qodpro\\dataTruffleSys\\client\\src\\views\\UploadManage.js"],"names":["Button","React","require","ipfsClient","ipfs","stringToUse","UploadManage","Component","constructor","props","uploadIpfs","source","add","file","console","log","hash","path","setState","isSuccess","state","componentDidMount","render","textAlign"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,iBAAnB;;AACA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEA,MAAMC,UAAU,GAAGD,OAAO,CAAC,kBAAD,CAA1B;;AAEA,MAAME,IAAI,GAAGD,UAAU,CAAC,yBAAD,CAAvB;AACA,MAAME,WAAW,GAAG,iCAApB;;AAEA,MAAMC,YAAN,SAA2BL,KAAK,CAACM,SAAjC,CAA2C;AACzCC,EAAAA,WAAW,CAAEC,KAAF,EAAS;AAClB,UAAMA,KAAN;;AADkB,SAoBpBC,UApBoB,GAoBP,YAAW;AAEtB,YAAMC,MAAM,GAAGP,IAAI,CAACQ,GAAL,CAASP,WAAT,CAAf;;AACA,iBAAW,MAAMQ,IAAjB,IAAyBF,MAAzB,EAAiC;AAC/BG,QAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CF,IAA5C;AACA,cAAMG,IAAI,GAAGH,IAAI,CAACI,IAAlB;AACA,aAAKC,QAAL,CAAc;AAACC,UAAAA,SAAS,EAAE;AAAZ,SAAd;AACAL,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA0BC,IAA1B,EAJ+B,CAM/B;AACA;AACA;AACA;AACA;AACA;AACA;AACD;AACF,KArCmB;;AAElB,SAAKI,KAAL,GAAa;AACXD,MAAAA,SAAS,EAAE,IADA,CAEX;AACA;AACA;AACA;AACA;;AANW,KAAb;AAQD;;AACD,QAAME,iBAAN,GAA2B,CACzB;AACA;AACA;AACA;AACA;AACA;AACD;;AAoBDC,EAAAA,MAAM,GAAI;AACR,WAAO;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACL,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAuB,MAAA,OAAO,EAAE,KAAKb,UAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADK,EAEL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAS,KAAKU,KAAL,CAAWD,SAApB,CAAT,CAFK,CAAP;AAkBD;;AA1DwC;;AA4D3C,eAAeb,YAAf,C,CAGA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import Button from 'antd/lib/button';\r\nconst React = require('react')\r\n\r\nconst ipfsClient = require('ipfs-http-client')\r\n\r\nconst ipfs = ipfsClient('/ip4/127.0.0.1/tcp/5001')\r\nconst stringToUse = 'hello world from webpacked IPFS'\r\n\r\nclass UploadManage extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {\r\n      isSuccess: null,\r\n      // added_file_hash: null,\r\n      // id: null,\r\n      // version: null,\r\n      // protocol_version: null,\r\n      // added_file_contents: null\r\n    }\r\n  }\r\n  async componentDidMount () {\r\n    // const id = await ipfs.id()\r\n    // this.setState({\r\n    //   id: id.id,\r\n    //   version: id.agentVersion,\r\n    //   protocol_version: id.protocolVersion\r\n    // })\r\n  }\r\n\r\n  uploadIpfs = async() => {\r\n  \r\n    const source = ipfs.add(stringToUse)\r\n    for await (const file of source) {\r\n      console.log(\"TCL: App -> forawait -> file\", file)\r\n      const hash = file.path\r\n      this.setState({isSuccess: \"成功\" })\r\n      console.log(\"file_hash: \",hash)\r\n\r\n      // const source = ipfs.cat(hash)\r\n      // const data = []\r\n      // for await (const chunk of source) {\r\n      //   data.push(chunk)\r\n      // }\r\n      // this.setState({ added_file_contents: Buffer.concat(data).toString() })\r\n      // console.log(\"file_contents: \",Buffer.concat(data).toString())\r\n    }\r\n  }\r\n  render () {\r\n    return <div style={{ textAlign: 'center' }}>\r\n      <Button type=\"primary\" onClick={this.uploadIpfs}>上传至IPFS</Button>\r\n      <p>上传状态： <strong>{this.state.isSuccess}</strong></p>\r\n      {/* <h1>Everything is working!</h1>\r\n      <p>Your ID is <strong>{this.state.id}</strong></p>\r\n      <p>Your IPFS version is <strong>{this.state.version}</strong></p>\r\n      <p>Your IPFS protocol version is <strong>{this.state.protocol_version}</strong></p>\r\n      <div>\r\n        <div>\r\n          Added a file! <br />\r\n          {this.state.added_file_hash}\r\n        </div>\r\n        <div>\r\n          Contents of this file: <br />\r\n          {this.state.added_file_contents}\r\n        </div>\r\n      </div> */}\r\n    </div>\r\n  }\r\n}\r\nexport default UploadManage\r\n\r\n\r\n// import React, { Component } from \"react\";\r\n\r\n// class Product extends Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n//     this.state = { };\r\n//   }\r\n\r\n//   render() {\r\n//     return (\r\n//         <div>\r\n//           Product\r\n//         </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default Product;\r\n"]},"metadata":{},"sourceType":"module"}