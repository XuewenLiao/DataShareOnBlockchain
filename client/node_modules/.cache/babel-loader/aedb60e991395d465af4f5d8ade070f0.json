{"ast":null,"code":"var _jsxFileName = \"D:\\\\LXW\\\\truffle_proj\\\\qodpro\\\\truffle_proj\\\\qodpro\\\\react-box\\\\client\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport { Layout, Menu, Icon } from 'antd';\nimport Button from 'antd/lib/button';\nimport SimpleStorageContract from \"./contracts/SimpleStorage.json\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport getWeb3 from \"./getWeb3\";\nimport \"./App.css\";\nimport routes from './models/router.js';\nconst Header = Layout.Header,\n      Sider = Layout.Sider,\n      Content = Layout.Content;\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      storageValue: 0,\n      web3: null,\n      accounts: null,\n      contract: null\n    };\n\n    this.componentDidMount = async () => {\n      try {\n        // Get network provider and web3 instance.\n        const web3 = await getWeb3(); // Use web3 to get the user's accounts.\n\n        const accounts = await web3.eth.getAccounts(); // Get the contract instance.\n\n        const networkId = await web3.eth.net.getId();\n        const deployedNetwork = SimpleStorageContract.networks[networkId];\n        const instance = new web3.eth.Contract(SimpleStorageContract.abi, deployedNetwork && deployedNetwork.address); // Set web3, accounts, and contract to the state, and then proceed with an\n        // example of interacting with the contract's methods.\n\n        this.setState({\n          web3,\n          accounts,\n          contract: instance\n        }, this.runExample);\n      } catch (error) {\n        // Catch any errors for any of the above operations.\n        alert(\"Failed to load web3, accounts, or contract. Check console for details.\");\n        console.error(error);\n      }\n    };\n\n    this.runExample = async () => {\n      const _this$state = this.state,\n            accounts = _this$state.accounts,\n            contract = _this$state.contract; // Stores a given value, 5 by default.\n\n      await contract.methods.set(5).send({\n        from: accounts[0]\n      }); // Get the value from the contract to prove it worked.\n\n      const response = await contract.methods.get().call(); // Update state with the result.\n\n      this.setState({\n        storageValue: response\n      });\n    };\n  }\n\n  render() {\n    // if (!this.state.web3) {\n    //   return <div>Loading Web3, accounts, and contract...</div>;\n    // }\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Sider, {\n      trigger: null,\n      collapsible: true,\n      collapsed: this.state.collapsed,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(Menu, {\n      theme: \"dark\",\n      mode: \"inline\",\n      defaultSelectedKeys: ['1'],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Menu.Item, {\n      key: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"user\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"  \", React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"\\u9996\\u9875\"))), React.createElement(Menu.Item, {\n      key: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"video-camera\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/news\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"\\u65B0\\u95FB\"))), React.createElement(Menu.Item, {\n      key: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"upload\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/product\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"\\u5546\\u54C1\"))))), React.createElement(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Header, {\n      style: {\n        background: '#fff',\n        padding: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      className: \"trigger\",\n      type: this.state.collapsed ? 'menu-unfold' : 'menu-fold',\n      onClick: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    })), React.createElement(Content, {\n      style: {\n        margin: '24px 16px',\n        padding: 24,\n        background: '#fff',\n        minHeight: 280\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, routes.map((route, key) => {\n      if (route.exact) {\n        return React.createElement(Route, {\n          key: key,\n          exact: true,\n          path: route.path,\n          component: route.component,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        });\n      } else {\n        return React.createElement(Route, {\n          key: key,\n          path: route.path,\n          component: route.component,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        });\n      }\n    }))))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:\\LXW\\truffle_proj\\qodpro\\truffle_proj\\qodpro\\react-box\\client\\src\\App.js"],"names":["React","Component","Layout","Menu","Icon","Button","SimpleStorageContract","BrowserRouter","Router","Route","Link","getWeb3","routes","Header","Sider","Content","App","state","storageValue","web3","accounts","contract","componentDidMount","eth","getAccounts","networkId","net","getId","deployedNetwork","networks","instance","Contract","abi","address","setState","runExample","error","alert","console","methods","set","send","from","response","get","call","render","collapsed","background","padding","toggle","margin","minHeight","map","route","key","exact","path","component"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Layout, Menu, Icon } from 'antd';\r\nimport Button from 'antd/lib/button';\r\n\r\nimport SimpleStorageContract from \"./contracts/SimpleStorage.json\";\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport getWeb3 from \"./getWeb3\";\r\n\r\nimport \"./App.css\";\r\n\r\nimport routes from './models/router.js';\r\n\r\nconst { Header, Sider, Content } = Layout;\r\n\r\nclass App extends Component {\r\n  state = { storageValue: 0, web3: null, accounts: null, contract: null };\r\n\r\n  componentDidMount = async () => {\r\n    try {\r\n      // Get network provider and web3 instance.\r\n      const web3 = await getWeb3();\r\n\r\n      // Use web3 to get the user's accounts.\r\n      const accounts = await web3.eth.getAccounts();\r\n\r\n      // Get the contract instance.\r\n      const networkId = await web3.eth.net.getId();\r\n      const deployedNetwork = SimpleStorageContract.networks[networkId];\r\n      const instance = new web3.eth.Contract(\r\n        SimpleStorageContract.abi,\r\n        deployedNetwork && deployedNetwork.address,\r\n      );\r\n\r\n      // Set web3, accounts, and contract to the state, and then proceed with an\r\n      // example of interacting with the contract's methods.\r\n      this.setState({ web3, accounts, contract: instance }, this.runExample);\r\n    } catch (error) {\r\n      // Catch any errors for any of the above operations.\r\n      alert(\r\n        `Failed to load web3, accounts, or contract. Check console for details.`,\r\n      );\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  runExample = async () => {\r\n    const { accounts, contract } = this.state;\r\n\r\n    // Stores a given value, 5 by default.\r\n    await contract.methods.set(5).send({ from: accounts[0] });\r\n\r\n    // Get the value from the contract to prove it worked.\r\n    const response = await contract.methods.get().call();\r\n\r\n    // Update state with the result.\r\n    this.setState({ storageValue: response });\r\n  };\r\n\r\n  render() {\r\n    // if (!this.state.web3) {\r\n    //   return <div>Loading Web3, accounts, and contract...</div>;\r\n    // }\r\n    return (\r\n      <Router>\r\n        <div>\r\n\r\n          <Layout>\r\n            <Sider trigger={null} collapsible collapsed={this.state.collapsed}>\r\n              <div className=\"logo\" />\r\n              <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['1']}>\r\n                <Menu.Item key=\"1\">\r\n                  <Icon type=\"user\" />\r\n                  <span>  <Link to=\"/\">首页</Link></span>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"2\">\r\n                  <Icon type=\"video-camera\" />\r\n                  <span><Link to=\"/news\">新闻</Link></span>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"3\">\r\n                  <Icon type=\"upload\" />\r\n                  <span><Link to=\"/product\">商品</Link></span>\r\n                </Menu.Item>\r\n              </Menu>\r\n            </Sider>\r\n            <Layout>\r\n              <Header style={{ background: '#fff', padding: 0 }}>\r\n                <Icon\r\n                  className=\"trigger\"\r\n                  type={this.state.collapsed ? 'menu-unfold' : 'menu-fold'}\r\n                  onClick={this.toggle}\r\n                />\r\n              </Header>\r\n              <Content\r\n                style={{\r\n                  margin: '24px 16px',\r\n                  padding: 24,\r\n                  background: '#fff',\r\n                  minHeight: 280,\r\n                }}\r\n              >\r\n                {\r\n                  routes.map((route, key) => {\r\n                    if (route.exact) {\r\n                      return <Route key={key} exact path={route.path} component={route.component} />\r\n                    } else {\r\n                      return <Route key={key} path={route.path} component={route.component} />\r\n                    }\r\n                  })\r\n                }\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}