{"ast":null,"code":"'use strict';\n\nconst _require = require('buffer'),\n      Buffer = _require.Buffer;\n\nconst CID = require('cids');\n\nconst configure = require('../lib/configure');\n\nmodule.exports = configure(({\n  ky\n}) => {\n  return async (cid, options) => {\n    options = options || {};\n    const searchParams = new URLSearchParams(options.searchParams);\n    searchParams.set('arg', \"\".concat(Buffer.isBuffer(cid) ? new CID(cid) : cid));\n    let res;\n\n    try {\n      res = await ky.post('object/stat', {\n        timeout: options.timeout,\n        signal: options.signal,\n        headers: options.headers,\n        searchParams\n      }).json();\n    } catch (err) {\n      if (err.name === 'TimeoutError') {\n        err.message = \"failed to get block for \".concat(Buffer.isBuffer(cid) ? new CID(cid) : cid, \": context deadline exceeded\");\n      }\n\n      throw err;\n    }\n\n    return res;\n  };\n});","map":null,"metadata":{},"sourceType":"script"}