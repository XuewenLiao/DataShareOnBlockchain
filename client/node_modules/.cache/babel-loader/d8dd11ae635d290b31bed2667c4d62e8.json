{"ast":null,"code":"'use strict';\n\nconst CID = require('cids');\n\nconst ndjson = require('iterable-ndjson');\n\nconst configure = require('../lib/configure');\n\nconst toIterable = require('stream-to-it/source');\n\nmodule.exports = configure(({\n  ky\n}) => {\n  return async function* rm(cid, options) {\n    options = options || {};\n\n    if (!Array.isArray(cid)) {\n      cid = [cid];\n    }\n\n    const searchParams = new URLSearchParams();\n    searchParams.set('stream-channels', true);\n    searchParams.set('force', options.force || false);\n    searchParams.set('quiet', options.quiet || false);\n    cid.forEach(cid => {\n      searchParams.append('arg', new CID(cid).toString());\n    });\n    const res = await ky.post('block/rm', {\n      timeout: options.timeout,\n      signal: options.signal,\n      headers: options.headers,\n      searchParams\n    });\n\n    for await (const removed of ndjson(toIterable(res.body))) {\n      yield toCoreInterface(removed);\n    }\n  };\n});\n\nfunction toCoreInterface(removed) {\n  const out = {\n    cid: new CID(removed.Hash)\n  };\n\n  if (removed.Error) {\n    out.error = new Error(removed.Error);\n  }\n\n  return out;\n}","map":null,"metadata":{},"sourceType":"script"}