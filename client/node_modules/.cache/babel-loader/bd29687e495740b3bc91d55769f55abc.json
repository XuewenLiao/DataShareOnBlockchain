{"ast":null,"code":"const BufferList = require('bl/BufferList');\n\nconst TypeDefault = {\n  string: () => '',\n  buffer: () => BufferList()\n};\n\nmodule.exports = async (source, options) => {\n  options = options || {};\n\n  if (options.type && !TypeDefault[options.type]) {\n    throw new Error(\"invalid type \\\"\".concat(options.type, \"\\\"\"));\n  }\n\n  let res, type;\n\n  for await (const chunk of source) {\n    if (!res) {\n      type = options.type || typeof chunk === 'string' ? 'string' : 'buffer';\n      res = TypeDefault[type]();\n    }\n\n    if (type === 'string') {\n      res += chunk;\n    } else {\n      res.append(chunk);\n    }\n  }\n\n  return res || TypeDefault[options.type || 'buffer']();\n};","map":null,"metadata":{},"sourceType":"script"}