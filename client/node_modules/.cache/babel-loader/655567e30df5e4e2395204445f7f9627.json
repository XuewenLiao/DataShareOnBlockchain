{"ast":null,"code":"var _jsxFileName = \"D:\\\\LXW\\\\truffle_proj\\\\qodpro\\\\truffle_proj\\\\qodpro\\\\react-box\\\\client\\\\src\\\\views\\\\Home.js\";\nimport React, { Component } from \"react\";\nimport { Table, Button } from 'antd';\nimport { findData } from '../methodTool';\nconst columns = [{\n  title: 'Username',\n  dataIndex: 'username',\n  width: 100\n}, {\n  title: 'Password',\n  dataIndex: 'password',\n  width: 80\n}, {\n  title: 'Location',\n  dataIndex: 'location',\n  width: 200\n}];\n\nclass Home extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectedRowKeys: [],\n      // Check here to configure the default column\n      loading: false,\n      data: []\n    };\n\n    this.start = () => {\n      //后台拿数据\n      this.setState({\n        loading: true\n      }); // ajax request after empty completing\n\n      findData().then(res => {\n        this.setState({\n          // data: [...res, data.map(val => {\n          //   val.key = val.username;\n          //   return val;\n          // })],\n          data: [...res, data.map((val, key) => {\n            value = val;\n            return value;\n          })],\n          selectedRowKeys: [],\n          loading: false\n        });\n      });\n    };\n\n    this.onSelectChange = selectedRowKeys => {\n      console.log('selectedRowKeys changed: ', selectedRowKeys);\n      this.setState({\n        selectedRowKeys\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.start();\n  }\n\n  render() {\n    const _this$state = this.state,\n          loading = _this$state.loading,\n          selectedRowKeys = _this$state.selectedRowKeys;\n    const rowSelection = {\n      selectedRowKeys,\n      onChange: this.onSelectChange\n    };\n    const hasSelected = selectedRowKeys.length > 0;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        marginBottom: 16\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      onClick: this.start,\n      disabled: !hasSelected,\n      loading: loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Reload\"), React.createElement(\"span\", {\n      style: {\n        marginLeft: 8\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, hasSelected ? \"Selected \".concat(selectedRowKeys.length, \" items\") : '')), React.createElement(Table, {\n      rowSelection: rowSelection,\n      columns: columns,\n      dataSource: this.state.data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Home; // class Home extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = { };\n//   }\n//   render() {\n//     return (\n//         <div>\n//           home:set table\n//         </div>\n//     );\n//   }\n// }\n// export default Home;","map":{"version":3,"sources":["D:\\LXW\\truffle_proj\\qodpro\\truffle_proj\\qodpro\\react-box\\client\\src\\views\\Home.js"],"names":["React","Component","Table","Button","findData","columns","title","dataIndex","width","Home","state","selectedRowKeys","loading","data","start","setState","then","res","map","val","key","value","onSelectChange","console","log","componentDidMount","render","rowSelection","onChange","hasSelected","length","marginBottom","marginLeft"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Table, Button } from 'antd';\r\nimport { findData } from '../methodTool'\r\n\r\n\r\nconst columns = [\r\n  {\r\n    title: 'Username',\r\n    dataIndex: 'username',\r\n    width:100,\r\n  },\r\n  {\r\n    title: 'Password',\r\n    dataIndex: 'password',\r\n    width:80,\r\n  },\r\n  {\r\n    title: 'Location',\r\n    dataIndex: 'location',\r\n    width:200,\r\n  },\r\n];\r\n\r\nclass Home extends React.Component {\r\n  state = {\r\n    selectedRowKeys: [], // Check here to configure the default column\r\n    loading: false,\r\n    data: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.start();\r\n  }\r\n\r\n  start = () => {\r\n    //后台拿数据\r\n    this.setState({ loading: true });\r\n    // ajax request after empty completing\r\n    findData().then(res => {\r\n      this.setState({\r\n        // data: [...res, data.map(val => {\r\n        //   val.key = val.username;\r\n        //   return val;\r\n        // })],\r\n        data: [...res, data.map((val,key) => {\r\n          value = val\r\n          return value;\r\n        })],\r\n        selectedRowKeys: [],\r\n        loading: false,\r\n      });\r\n    })\r\n  };\r\n\r\n  onSelectChange = selectedRowKeys => {\r\n    console.log('selectedRowKeys changed: ', selectedRowKeys);\r\n    this.setState({ selectedRowKeys });\r\n  };\r\n\r\n\r\n  render() {\r\n    const { loading, selectedRowKeys } = this.state;\r\n    const rowSelection = {\r\n      selectedRowKeys,\r\n      onChange: this.onSelectChange,\r\n    };\r\n    const hasSelected = selectedRowKeys.length > 0;\r\n    return (\r\n      <div>\r\n        <div style={{ marginBottom: 16 }}>\r\n          <Button type=\"primary\" onClick={this.start} disabled={!hasSelected} loading={loading}>\r\n            Reload\r\n          </Button>\r\n          <span style={{ marginLeft: 8 }}>\r\n            {hasSelected ? `Selected ${selectedRowKeys.length} items` : ''}\r\n          </span>\r\n        </div>\r\n        <Table rowSelection={rowSelection} columns={columns} dataSource={this.state.data} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default Home;\r\n\r\n// class Home extends Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n//     this.state = { };\r\n//   }\r\n\r\n//   render() {\r\n//     return (\r\n//         <div>\r\n\r\n//           home:set table\r\n\r\n//         </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default Home;\r\n"]},"metadata":{},"sourceType":"module"}