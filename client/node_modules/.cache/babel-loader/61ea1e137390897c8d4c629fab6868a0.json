{"ast":null,"code":"'use strict';\n\nconst ndjson = require('iterable-ndjson');\n\nconst CID = require('cids');\n\nconst configure = require('../lib/configure');\n\nconst toIterable = require('stream-to-it/source');\n\nmodule.exports = configure(({\n  ky\n}) => {\n  return async function* ls(path, options) {\n    if (path && path.type) {\n      options = path;\n      path = null;\n    }\n\n    path = path || [];\n    path = Array.isArray(path) ? path : [path];\n    options = options || {};\n    const searchParams = new URLSearchParams(options.searchParams);\n    searchParams.set('stream', options.stream == null ? true : options.stream);\n    path.forEach(p => searchParams.append('arg', \"\".concat(p)));\n    if (options.type) searchParams.set('type', options.type);\n    const res = await ky.post('pin/ls', {\n      timeout: options.timeout,\n      signal: options.signal,\n      headers: options.headers,\n      searchParams\n    });\n\n    for await (const pin of ndjson(toIterable(res.body))) {\n      if (pin.Keys) {\n        // non-streaming response\n        for (const cid of Object.keys(pin.Keys)) {\n          yield {\n            cid: new CID(cid),\n            type: pin.Keys[cid].Type\n          };\n        }\n\n        return;\n      }\n\n      yield {\n        cid: new CID(pin.Cid),\n        type: pin.Type\n      };\n    }\n  };\n});","map":null,"metadata":{},"sourceType":"script"}