{"ast":null,"code":"'use strict';\n\nconst dagPB = require('ipld-dag-pb');\n\nconst dagCBOR = require('ipld-dag-cbor');\n\nconst raw = require('ipld-raw');\n\nconst configure = require('../lib/configure');\n\nconst resolvers = {\n  'dag-cbor': dagCBOR.resolver,\n  'dag-pb': dagPB.resolver,\n  raw: raw.resolver\n};\n\nmodule.exports = config => {\n  const getBlock = require('../block/get')(config);\n\n  const dagResolve = require('./resolve')(config);\n\n  return configure(({\n    ky\n  }) => {\n    return async (cid, path, options) => {\n      if (typeof path === 'object') {\n        options = path;\n        path = null;\n      }\n\n      options = options || {};\n      const resolved = await dagResolve(cid, path, options);\n      const block = await getBlock(resolved.cid, options);\n      const dagResolver = resolvers[block.cid.codec];\n\n      if (!dagResolver) {\n        throw Object.assign(new Error(\"Missing IPLD format \\\"\".concat(block.cid.codec, \"\\\"\")), {\n          missingMulticodec: cid.codec\n        });\n      }\n\n      return dagResolver.resolve(block.data, resolved.remPath);\n    };\n  })(config);\n};","map":null,"metadata":{},"sourceType":"script"}