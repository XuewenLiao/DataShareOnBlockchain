{"ast":null,"code":"'use strict';\n\nconst configure = require('../lib/configure');\n\nconst toFormData = require('../lib/buffer-to-form-data');\n\nconst modeToString = require('../lib/mode-to-string');\n\nconst mtimeToObject = require('../lib/mtime-to-object');\n\nmodule.exports = configure(({\n  ky\n}) => {\n  return async (path, input, options) => {\n    options = options || {};\n    const mtime = mtimeToObject(options.mtime);\n    const searchParams = new URLSearchParams(options.searchParams);\n    searchParams.set('arg', path);\n    searchParams.set('stream-channels', true);\n    if (options.cidVersion) searchParams.set('cid-version', options.cidVersion);\n    if (options.create != null) searchParams.set('create', options.create);\n    if (options.hashAlg) searchParams.set('hash', options.hashAlg);\n    if (options.length != null) searchParams.set('length', options.length);\n    if (options.offset != null) searchParams.set('offset', options.offset);\n    if (options.parents != null) searchParams.set('parents', options.parents);\n    if (options.rawLeaves != null) searchParams.set('raw-leaves', options.rawLeaves);\n    if (options.truncate != null) searchParams.set('truncate', options.truncate);\n    if (options.shardSplitThreshold != null) searchParams.set('shardSplitThreshold', options.shardSplitThreshold);\n\n    if (mtime) {\n      searchParams.set('mtime', mtime.secs);\n\n      if (mtime.nsecs != null) {\n        searchParams.set('mtimeNsecs', mtime.nsecs);\n      }\n    }\n\n    const res = await ky.post('files/write', {\n      timeout: options.timeout,\n      signal: options.signal,\n      headers: options.headers,\n      searchParams,\n      body: toFormData(input, {\n        mode: options.mode != null ? modeToString(options.mode) : undefined,\n        mtime: mtime ? mtime.secs : undefined,\n        mtimeNsecs: mtime ? mtime.nsecs : undefined\n      }) // TODO: support inputs other than buffer as per spec\n\n    });\n    return res.text();\n  };\n});","map":null,"metadata":{},"sourceType":"script"}