{"ast":null,"code":"var _jsxFileName = \"D:\\\\LXW\\\\truffle_proj\\\\qodpro\\\\dataTruffleSys\\\\client\\\\src\\\\views\\\\UploadManage.js\";\nimport Button from 'antd/lib/button';\nimport { getOrigData } from '../methodTool';\n\nconst React = require('react');\n\nconst ipfsClient = require('ipfs-http-client');\n\nconst ipfs = ipfsClient('/ip4/127.0.0.1/tcp/5001'); // const stringToUse = 'hello world from webpacked IPFS'\n\nconst origData = [];\n\nclass UploadManage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isSuccess: null,\n      origData: [] // added_file_hash: null,\n      // id: null,\n      // version: null,\n      // protocol_version: null,\n      // added_file_contents: null\n\n    };\n  }\n\n  async componentDidMount() {\n    // origData = getOrigData();\n    // console.log(\"origData==\",origData);\n    // alert(origData);\n    getOrigData().then(res => {\n      this.setState({\n        origData: [...res, origData.map(val => {\n          // val.key = val.id;\n          return val;\n        })]\n      });\n    });\n    console.log(\"origData==\", origData);\n    alert(origData);\n  } // uploadIpfs = async() => {\n  //   const source = ipfs.add(stringToUse)\n  //   for await (const file of source) {\n  //     console.log(\"TCL: App -> forawait -> file\", file)\n  //     const hash = file.path\n  //     this.setState({isSuccess: \"成功\" })\n  //     console.log(\"file_hash: \",hash)\n  //     // const source = ipfs.cat(hash)\n  //     // const data = []\n  //     // for await (const chunk of source) {\n  //     //   data.push(chunk)\n  //     // }\n  //     // this.setState({ added_file_contents: Buffer.concat(data).toString() })\n  //     // console.log(\"file_contents: \",Buffer.concat(data).toString())\n  //   }\n  // }\n\n\n  render() {\n    return React.createElement(\"div\", {\n      style: {\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"\\u4E0A\\u4F20\\u72B6\\u6001\\uFF1A \", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, this.state.isSuccess)));\n  }\n\n}\n\nexport default UploadManage; // import React, { Component } from \"react\";\n// class Product extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = { };\n//   }\n//   render() {\n//     return (\n//         <div>\n//           Product\n//         </div>\n//     );\n//   }\n// }\n// export default Product;","map":{"version":3,"sources":["D:\\LXW\\truffle_proj\\qodpro\\dataTruffleSys\\client\\src\\views\\UploadManage.js"],"names":["Button","getOrigData","React","require","ipfsClient","ipfs","origData","UploadManage","Component","constructor","props","state","isSuccess","componentDidMount","then","res","setState","map","val","console","log","alert","render","textAlign"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,iBAAnB;AACA,SAASC,WAAT,QAA4B,eAA5B;;AACA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEA,MAAMC,UAAU,GAAGD,OAAO,CAAC,kBAAD,CAA1B;;AACA,MAAME,IAAI,GAAGD,UAAU,CAAC,yBAAD,CAAvB,C,CACA;;AAEA,MAAME,QAAQ,GAAG,EAAjB;;AAEA,MAAMC,YAAN,SAA2BL,KAAK,CAACM,SAAjC,CAA2C;AACzCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE,IADA;AAEXN,MAAAA,QAAQ,EAAE,EAFC,CAGX;AACA;AACA;AACA;AACA;;AAPW,KAAb;AASD;;AACD,QAAMO,iBAAN,GAA0B;AACxB;AACA;AACA;AACAZ,IAAAA,WAAW,GAAGa,IAAd,CAAmBC,GAAG,IAAI;AAExB,WAAKC,QAAL,CAAc;AACZV,QAAAA,QAAQ,EAAE,CAAC,GAAGS,GAAJ,EAAST,QAAQ,CAACW,GAAT,CAAaC,GAAG,IAAI;AACrC;AACA,iBAAOA,GAAP;AACD,SAHkB,CAAT;AADE,OAAd;AAMD,KARD;AAUAC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0Bd,QAA1B;AACAe,IAAAA,KAAK,CAACf,QAAD,CAAL;AAED,GA9BwC,CAmCzC;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAgB,EAAAA,MAAM,GAAG;AACP,WAAO;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAS,KAAKZ,KAAL,CAAWC,SAApB,CAAT,CAFK,CAAP;AAkBD;;AAxEwC;;AA0E3C,eAAeL,YAAf,C,CAGA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import Button from 'antd/lib/button';\r\nimport { getOrigData } from '../methodTool'\r\nconst React = require('react')\r\n\r\nconst ipfsClient = require('ipfs-http-client')\r\nconst ipfs = ipfsClient('/ip4/127.0.0.1/tcp/5001')\r\n// const stringToUse = 'hello world from webpacked IPFS'\r\n\r\nconst origData = []\r\n\r\nclass UploadManage extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      isSuccess: null,\r\n      origData: []\r\n      // added_file_hash: null,\r\n      // id: null,\r\n      // version: null,\r\n      // protocol_version: null,\r\n      // added_file_contents: null\r\n    }\r\n  }\r\n  async componentDidMount() {\r\n    // origData = getOrigData();\r\n    // console.log(\"origData==\",origData);\r\n    // alert(origData);\r\n    getOrigData().then(res => {\r\n\r\n      this.setState({\r\n        origData: [...res, origData.map(val => {\r\n          // val.key = val.id;\r\n          return val;\r\n        })],\r\n      });\r\n    })\r\n\r\n    console.log(\"origData==\", origData);\r\n    alert(origData);\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  // uploadIpfs = async() => {\r\n\r\n  //   const source = ipfs.add(stringToUse)\r\n  //   for await (const file of source) {\r\n  //     console.log(\"TCL: App -> forawait -> file\", file)\r\n  //     const hash = file.path\r\n  //     this.setState({isSuccess: \"成功\" })\r\n  //     console.log(\"file_hash: \",hash)\r\n\r\n  //     // const source = ipfs.cat(hash)\r\n  //     // const data = []\r\n  //     // for await (const chunk of source) {\r\n  //     //   data.push(chunk)\r\n  //     // }\r\n  //     // this.setState({ added_file_contents: Buffer.concat(data).toString() })\r\n  //     // console.log(\"file_contents: \",Buffer.concat(data).toString())\r\n  //   }\r\n  // }\r\n  render() {\r\n    return <div style={{ textAlign: 'center' }}>\r\n      {/* <Button type=\"primary\" onClick={this.uploadIpfs}>上传至IPFS</Button> */}\r\n      <p>上传状态： <strong>{this.state.isSuccess}</strong></p>\r\n      {/* <h1>Everything is working!</h1>\r\n      <p>Your ID is <strong>{this.state.id}</strong></p>\r\n      <p>Your IPFS version is <strong>{this.state.version}</strong></p>\r\n      <p>Your IPFS protocol version is <strong>{this.state.protocol_version}</strong></p>\r\n      <div>\r\n        <div>\r\n          Added a file! <br />\r\n          {this.state.added_file_hash}\r\n        </div>\r\n        <div>\r\n          Contents of this file: <br />\r\n          {this.state.added_file_contents}\r\n        </div>\r\n      </div> */}\r\n    </div>\r\n  }\r\n}\r\nexport default UploadManage\r\n\r\n\r\n// import React, { Component } from \"react\";\r\n\r\n// class Product extends Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n//     this.state = { };\r\n//   }\r\n\r\n//   render() {\r\n//     return (\r\n//         <div>\r\n//           Product\r\n//         </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default Product;\r\n"]},"metadata":{},"sourceType":"module"}