{"ast":null,"code":"'use strict';\n\nconst CID = require('cids');\n\nconst ndjson = require('iterable-ndjson');\n\nconst multiaddr = require('multiaddr');\n\nconst toIterable = require('stream-to-it/source');\n\nconst configure = require('../lib/configure');\n\nconst toCamel = require('../lib/object-to-camel');\n\nmodule.exports = configure(({\n  ky\n}) => {\n  return async function* query(peerId, options) {\n    options = options || {};\n    const searchParams = new URLSearchParams(options.searchParams);\n    searchParams.set('arg', \"\".concat(Buffer.isBuffer(peerId) ? new CID(peerId) : peerId));\n    if (options.verbose != null) searchParams.set('verbose', options.verbose);\n    const res = await ky.post('dht/query', {\n      timeout: options.timeout,\n      signal: options.signal,\n      headers: options.headers,\n      searchParams\n    });\n\n    for await (let message of ndjson(toIterable(res.body))) {\n      message = toCamel(message);\n      message.id = new CID(message.id);\n      message.responses = (message.responses || []).map(({\n        ID,\n        Addrs\n      }) => ({\n        id: ID,\n        addrs: (Addrs || []).map(a => multiaddr(a))\n      }));\n      yield message;\n    }\n  };\n});","map":null,"metadata":{},"sourceType":"script"}